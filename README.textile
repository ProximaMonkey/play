note: this fork contains a few patches that I believe would make using Play in dev mode faster and better in showing errors. -- branaway


h1. Welcome to Play framework

Play framework makes it easier to build Web applications with Java. It is a clean alternative to bloated Enterprise Java stacks. It focuses on developer productivity and targets RESTful architectures. Play is a perfect companion to agile software development.

Learn more on the "http://www.playframework.org":http://www.playframework.org website.

h2. Getting started

1. Install the latest version of Play framework and unzip it anywhere you want:

bc. unzip play-1.2.zip -d /opt/play-1.2

2. Add the **play** script to your PATH:

bc. export PATH=$PATH:/opt/play-1.2

3. Create a new Play application:

bc. play new /opt/myFirstApp

4. Run the created application:

bc. play run /opt/myFirstApp

5. Go to "localhost:9000/":http://localhost:9000 and you’ll see the welcome page.

6. Start developing your new application:

* "Your first application — the ‘Hello World’ tutorial":http://www.playframework.org/documentation/1.1/firstapp
* "Tutorial — Play guide, a real world app step-by-step":http://www.playframework.org/documentation/1.1/guide1
* "The essential documentation":http://www.playframework.org/documentation/1.0.3/main
* "Java API":http://www.playframework.org/@api/index.html

h2. Get the source

Fork the project source code on "Github":http://github.com/playframework/play:

bc. git clone git://github.com/playframework/play.git

The project history is pretty big. You can pull only a shallow clone by specifying the number of commits you want with **--depth**:

bc.  git clone git://github.com/playframework/play.git --depth 10

h2. Reporting bugs

Please report bugs on "our lighthouse tracker":http://play.lighthouseapp.com/projects/57987-play-framework.

h2. License

Play framework is distributed under "Apache 2 license":http://www.apache.org/licenses/LICENSE-2.0.html.


h2. Bing Ran local patches:

I have made a few patched that fix a few bugs and inconvenience

# simplified the error message in case of ActionNotFoundException.
# MemecachedImpl: clean keys with space and delegate to super class loader for primitive array types
# UrlEncodeParser: changed to use "_body" from "body" to avoid conflicts with user's body parameter
# NoRouteFoundException: added the action name in the error message.
# Invoker: synch the creation of the suspended invocations.
# Play: added a delay in detecting changes to avoid run the detection for very requests in a burst.
# PlayHandler: added keep-alive header to the HTTP 1.0 request. 
# Wrapped the HotswapAgent in PlayAgent.jar to be used as the JVM agent instead of the whole play.jar. This way start script for applications can be simplified to the point that I can use regular Eclipse run/debug instead of using the remote debugging mode.
# added option to invoke ActionInvocation without going through the intermediate executor. The option to add to application.conf: "action.invocation.direct" with value of "true"/"false";
